#!/bin/bash
# {{ ansible_managed }}
#
#   -parameter: none
#   -Return Code:   0 = OK    1 = error

export DIRBACKUP=/var/lib/backup/MYSQL
export LOGDIR=/var/lib/backup/MYSQL/logs
export LOGFILE=$LOGDIR/mysql_xtrabackup_backup_`date +%d%m%y.%H%M%S`.log
printf "\n\n ############################Backup HOT MYSQL XTRABACKUP############################ \n" >> $LOGFILE
printf "\n\n*******Archive previous backup********\n" >> $LOGFILE
rm -rf ${DIRBACKUP}/J-1 >> ${LOGFILE} 2>&1
mv -f ${DIRBACKUP}/J ${DIRBACKUP}/J-1 >> ${LOGFILE} 2>&1

printf "\n\n****************Backup Percona XtraBackup**************** \n" >> ${LOGFILE}
innobackupex --defaults-file=/etc/mysql/my.cnf --user=root ${DIRBACKUP}/J --no-timestamp >> ${LOGFILE} 2>&1
printf "\n\n****************Recover Backup Percona XtraBackup**************** \n" >> ${LOGFILE}
innobackupex --defaults-file=/etc/mysql/my.cnf --user=root --apply-log ${DIRBACKUP}/J >> ${LOGFILE} 2>&1
printf "\n\n**********backup content*********** \n" >> ${LOGFILE}
ls -l ${DIRBACKUP}/J >> ${LOGFILE} 2>&1
printf "\n\n**********backup logs cleanup*********** \n" >> ${LOGFILE}
if [ -d ${LOGDIR} ]
then
   find  ${LOGDIR} -name "mysql_xtrabackup_backup_*.log" -ctime +30 -print -exec /bin/rm {} \; >> ${LOGFILE} 2>&1
else
   echo " No old log files" >> ${LOGFILE}
fi
printf "\n\n**********Backup Status*********** \n"
printf "\n\n**********Backup Status*********** \n" >> ${LOGFILE} 2>&1
export SUCCESS=`egrep " completed OK" ${LOGFILE} | wc -l`
if [ ${SUCCESS} == 2 ]
then
  echo "SUCCES : BACKUP OK"
  echo "SUCCES : BACKUP OK" >> ${LOGFILE}
else
   echo "ERROR : BACKUP KO"
   echo "LOGFILE="${LOGFILE}
   echo "ERROR : BACKUP KO" >> ${LOGFILE}
fi
exit 0
